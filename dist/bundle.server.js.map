{"version":3,"file":"bundle.server.js","sources":["../src/common/apiRoutes.ts","../src/server/services/registerRoute.ts","../src/server/services/AppController.ts","../src/server/services/ModuleController.ts","../src/server/services/ServiceController.ts","../src/server/services/SettingsController.ts","../src/server/services/WebComponentController.ts","../src/server/services/WebPageController.ts","../src/server/index.ts"],"sourcesContent":["import { ICommandResult, IModuleRepositoryItem, IServiceRepositoryItem, ISystemSettings, IWebComponentOptions, IWebPageOptions } from '@schirkan/reactron-interfaces';\r\nimport { IServerInfo } from '../common/interfaces/IServerInfo';\r\n\r\nexport class ApiRoute<TParams, TBody, TResponse = void>{\r\n    constructor(\r\n        public path: string,\r\n        public method: string\r\n    ) { }\r\n}\r\n\r\nexport const routes = {\r\n    getServices: new ApiRoute<undefined, undefined, IServiceRepositoryItem[]>('/service/', 'get'),\r\n    getServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, undefined, object>('/service/:moduleName/:serviceName', 'get'),\r\n    setServiceOptions: new ApiRoute<{ moduleName: string, serviceName: string }, object>('/service/:moduleName/:serviceName', 'post'),\r\n\r\n    getModules: new ApiRoute<undefined, undefined, IModuleRepositoryItem[]>('/modules/', 'get'),\r\n    addModule: new ApiRoute<undefined, { repository: string }, ICommandResult[]>('/modules/', 'post'),\r\n    deleteModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName', 'delete'),\r\n    rebuildModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/rebuild', 'post'),\r\n    updateModule: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/:moduleName/update', 'post'),\r\n    checkUpdates: new ApiRoute<{ moduleName: string }, undefined, ICommandResult[]>('/modules/checkUpdates/update', 'get'),\r\n\r\n    getWebPages: new ApiRoute<undefined, undefined, IWebPageOptions[]>('/pages/', 'get'),\r\n    setWebPage: new ApiRoute<undefined, IWebPageOptions, IWebPageOptions>('/pages/', 'post'),\r\n    deleteWebPage: new ApiRoute<{ id: string }, undefined>('/pages/:id', 'delete'),\r\n\r\n    getServerInfo: new ApiRoute<undefined, undefined, IServerInfo>('/app/', 'get'),\r\n    exitApplication: new ApiRoute<undefined, undefined>('/app/exitApplication', 'post'),\r\n    restartApplication: new ApiRoute<undefined, undefined>('/app/restartApplication', 'post'),\r\n    shutdownSystem: new ApiRoute<undefined, undefined>('/app/shutdownSystem', 'post'),\r\n    rebootSystem: new ApiRoute<undefined, undefined>('/app/restartSystem', 'post'),\r\n    resetApplication: new ApiRoute<undefined, undefined>('/app/resetApplication', 'post'),\r\n    \r\n    getSettings: new ApiRoute<undefined, undefined, ISystemSettings>('/settings/', 'get'),\r\n    setSettings: new ApiRoute<undefined, ISystemSettings>('/settings/', 'post'),\r\n\r\n    getWebComponentOptions: new ApiRoute<undefined, undefined, IWebComponentOptions[]>('/components/', 'get'),\r\n    setWebComponentOptions: new ApiRoute<undefined, IWebComponentOptions, IWebComponentOptions>('/components/', 'post'),\r\n    deleteWebComponentOptions: new ApiRoute<{ id: string }, undefined>('/components/:id', 'delete'),\r\n};","import * as express from 'express';\r\nimport { ApiRoute } from '../../common/apiRoutes';\r\n\r\nexport const registerRoute = <TParams, TBody, TResponse>(\r\n    router: express.Router,\r\n    route: ApiRoute<TParams, TBody, TResponse>,\r\n    handler: (req: { params: TParams, body: TBody }, res: express.Response & { send: (body?: TResponse) => void }, next: express.NextFunction) => void | Promise<void>\r\n): void => {\r\n    console.log('Register route: ' + route.method + ' ' + route.path);\r\n    const method = router[route.method.toLowerCase()].bind(router);\r\n    method(route.path, handler);\r\n};","import { IReactronService, IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport * as os from 'os';\r\nimport { IServerInfo } from 'src/common/interfaces/IServerInfo';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\n// tslint:disable-next-line:no-var-requires\r\nconst osCommand = require('electron-shutdown-command');\r\n\r\nconst getIPAddress = () => {\r\n    const list: string[] = [];\r\n    const interfaces = os.networkInterfaces();\r\n    const devices = Object.keys(interfaces);\r\n    for (const devName of devices) {\r\n        const iface = interfaces[devName];\r\n        for (const alias of iface) {\r\n            if (alias.family === 'IPv4' && alias.address !== '127.0.0.1' && !alias.internal) {\r\n                list.push(alias.address);\r\n            }\r\n        }\r\n    }\r\n    if (list.length > 1) {\r\n        const lanIp = list.find(x => x.startsWith('192.168.'));\r\n        if (lanIp) {\r\n            return lanIp;\r\n        }\r\n    } else if (list.length === 1) {\r\n        return list[0];\r\n    }\r\n    return '0.0.0.0';\r\n};\r\n\r\nconst getCpuInfo = () => {\r\n    const cpus = os.cpus();\r\n    return { count: cpus.length, speed: cpus[0].speed };\r\n};\r\n\r\nconst getMemoryInfo = () => {\r\n    return { free: os.freemem(), total: os.totalmem() };\r\n};\r\n\r\nexport class AppController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('AppController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getServerInfo, async (req, res) => {\r\n            console.log('AppController.getServerInfo');\r\n\r\n            const moduleInfo = context.backendService.moduleRepository.get('@schirkan/reactron');\r\n\r\n            const result: IServerInfo = {\r\n                hostname: os.hostname(),\r\n                ip: getIPAddress(),\r\n                cpu: getCpuInfo(),\r\n                memory: getMemoryInfo(),\r\n                version: moduleInfo && moduleInfo.version || ''\r\n            };\r\n            res.send(result);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.exitApplication, async (req, res) => {\r\n            console.log('AppController.exitApplication');\r\n            res.sendStatus(204);\r\n            context.backendService.exit();\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.restartApplication, async (req, res) => {\r\n            console.log('AppController.restartApplication');\r\n            res.sendStatus(204);\r\n            context.backendService.restart();\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.shutdownSystem, async (req, res) => {\r\n            console.log('AppController.shutdownSystem');\r\n            res.sendStatus(204);\r\n            osCommand.shutdown();\r\n            context.backendService.exit();\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.rebootSystem, async (req, res) => {\r\n            console.log('AppController.rebootSystem');\r\n            res.sendStatus(204);\r\n            osCommand.reboot();\r\n            context.backendService.exit();\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.resetApplication, async (req, res) => {\r\n            console.log('AppController.resetApplication');\r\n            res.sendStatus(204);\r\n            context.backendService.reset();\r\n        });\r\n    }\r\n}","import { ICommandResult, IReactronService, IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\nexport class ModuleController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('ModuleController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getModules, async (req, res) => {\r\n            console.log('ModuleController.getAll');\r\n\r\n            const modules = context.backendService.moduleManager.getAll();\r\n            res.send(modules);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.checkUpdates, async (req, res) => {\r\n            console.log('ModuleController.checkUpdates');\r\n\r\n            const resultCheckUpdates = await context.backendService.moduleManager.checkUpdates();\r\n            res.send([resultCheckUpdates]);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.addModule, async (req, res) => {\r\n            console.log('ModuleController.add');\r\n\r\n            const results: ICommandResult[] = [];\r\n            const resultAdd = await context.backendService.moduleManager.add(req.body.repository);\r\n            results.push(resultAdd);\r\n\r\n            if (resultAdd.success && resultAdd.data) {\r\n                const moduleRepositoryItem = resultAdd.data;\r\n                const resultInstall = await context.backendService.moduleManager.install(moduleRepositoryItem);\r\n                results.push(resultInstall);\r\n\r\n                if (!resultAdd.data.isBuilded) {\r\n                    const resultBuild = await context.backendService.moduleManager.build(moduleRepositoryItem);\r\n                    results.push(resultBuild);\r\n                }\r\n            }\r\n            res.send(results);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.deleteModule, async (req, res) => {\r\n            console.log('ModuleController.remove');\r\n\r\n            const moduleRepositoryItem = context.backendService.moduleManager.get(req.params.moduleName);\r\n            if (moduleRepositoryItem) {\r\n                const result = await context.backendService.moduleManager.remove(moduleRepositoryItem);\r\n                res.send([result]);\r\n            } else {\r\n                res.sendStatus(404);\r\n            }\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.rebuildModule, async (req, res) => {\r\n            console.log('ModuleController.rebuild');\r\n\r\n            const moduleRepositoryItem = context.backendService.moduleManager.get(req.params.moduleName);\r\n            if (moduleRepositoryItem) {\r\n                const resultInstall = await context.backendService.moduleManager.install(moduleRepositoryItem);\r\n                const resultBuild = await context.backendService.moduleManager.build(moduleRepositoryItem);\r\n                res.send([resultInstall, resultBuild]);\r\n            } else {\r\n                res.sendStatus(404);\r\n            }\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.updateModule, async (req, res) => {\r\n            console.log('ModuleController.update');\r\n\r\n            const moduleRepositoryItem = context.backendService.moduleManager.get(req.params.moduleName);\r\n            if (moduleRepositoryItem) {\r\n                const results: ICommandResult[] = [];\r\n                if (moduleRepositoryItem.hasUpdate) {\r\n                    const resultUpdate = await context.backendService.moduleManager.update(moduleRepositoryItem);\r\n                    results.push(resultUpdate);\r\n                    const resultInstall = await context.backendService.moduleManager.install(moduleRepositoryItem);\r\n                    results.push(resultInstall);\r\n                    const resultBuild = await context.backendService.moduleManager.build(moduleRepositoryItem);\r\n                    results.push(resultBuild);\r\n                }\r\n                res.send(results);\r\n            } else {\r\n                res.sendStatus(404);\r\n            }\r\n        });\r\n    }\r\n}","import { IReactronService, IReactronServiceContext, IServiceRepositoryItem } from '@schirkan/reactron-interfaces';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\nexport class ServiceController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('ServiceController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getServices, async (req, res) => {\r\n            console.log('ServiceController.getAll');\r\n            const result = await context.backendService.serviceRepository.getAll();\r\n            const serviceInfos = result.map(item => {\r\n                const { instance, service, ...serviceInfo } = item;\r\n                return serviceInfo as IServiceRepositoryItem;\r\n            });\r\n            res.send(serviceInfos);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getServiceOptions, async (req, res) => {\r\n            console.log('ServiceController.getServiceOptions');\r\n            const result = context.backendService.serviceManager.getOptions(req.params.moduleName, req.params.serviceName);\r\n            res.send(result);\r\n        });\r\n\r\n        registerRoute(context.moduleApiRouter, routes.setServiceOptions, async (req, res) => {\r\n            console.log('ServiceController.setServiceOptions');\r\n            await context.backendService.serviceManager.setOptions(req.params.moduleName, req.params.serviceName, req.body);\r\n            res.sendStatus(204);\r\n            // TODO: ex handling\r\n        });\r\n    }\r\n}","import { IReactronService, IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\nexport class SettingsController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('SettingsController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getSettings, async (req, res) => {\r\n            console.log('SettingsController.get');\r\n            const result = await context.backendService.settings.get();\r\n            res.send(result);\r\n        });\r\n        \r\n        registerRoute(context.moduleApiRouter, routes.setSettings, async (req, res) => {\r\n            console.log('SettingsController.set');\r\n            context.backendService.settings.set(req.body);\r\n            res.sendStatus(204);\r\n            // TODO: ex handling\r\n        });\r\n    }\r\n}","import { IReactronService, IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\nexport class WebComponentController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('WebComponentController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getWebComponentOptions, async (req, res) => {\r\n            console.log('WebComponentController.getAll');\r\n            const result = context.backendService.webComponentsManager.getAll();\r\n            res.send(result);\r\n        });\r\n        \r\n        registerRoute(context.moduleApiRouter, routes.setWebComponentOptions, async (req, res) => {\r\n            console.log('WebComponentController.createOrUpdate');\r\n            const item = context.backendService.webComponentsManager.createOrUpdate(req.body);\r\n            res.send(item);\r\n        });\r\n        \r\n        registerRoute(context.moduleApiRouter, routes.deleteWebComponentOptions, async (req, res) => {\r\n            console.log('WebComponentController.remove');\r\n            context.backendService.webComponentsManager.remove(req.params.id);\r\n            res.sendStatus(204);\r\n        });\r\n    }\r\n}","import { IReactronService, IReactronServiceContext } from '@schirkan/reactron-interfaces';\r\nimport { routes } from '../../common/apiRoutes';\r\nimport { registerRoute } from './registerRoute';\r\n\r\nexport class WebPageController implements IReactronService {\r\n    public async start(context: IReactronServiceContext): Promise<void> {\r\n        console.log('WebPageController.start');\r\n\r\n        registerRoute(context.moduleApiRouter, routes.getWebPages, async (req, res) => {\r\n            console.log('WebPageController.getAll');\r\n            const result = context.backendService.webPageManager.getAll();\r\n            res.send(result);\r\n        });\r\n        \r\n        registerRoute(context.moduleApiRouter, routes.setWebPage, async (req, res) => {\r\n            console.log('WebPageController.createOrUpdate');\r\n            const item = context.backendService.webPageManager.createOrUpdate(req.body);\r\n            res.send(item);\r\n        });\r\n        \r\n        registerRoute(context.moduleApiRouter, routes.deleteWebPage, async (req, res) => {\r\n            console.log('WebPageController.remove');\r\n            context.backendService.webPageManager.remove(req.params.id);\r\n            res.sendStatus(204);\r\n        });\r\n    }\r\n}","import { IReactronServiceDefinition } from \"@schirkan/reactron-interfaces\";\r\nimport { AppController } from \"./services/AppController\";\r\nimport { ModuleController } from \"./services/ModuleController\";\r\nimport { ServiceController } from \"./services/ServiceController\";\r\nimport { SettingsController } from \"./services/SettingsController\";\r\nimport { WebComponentController } from \"./services/WebComponentController\";\r\nimport { WebPageController } from \"./services/WebPageController\";\r\n\r\nexport const services: IReactronServiceDefinition[] = [{\r\n    name: 'ModuleController',\r\n    displayName: 'Modules API',\r\n    description: 'API Controller for Modules',\r\n    service: ModuleController\r\n}, {\r\n    name: 'ServiceController',\r\n    displayName: 'Service API',\r\n    description: 'API Controller for Services',\r\n    service: ServiceController\r\n}, {\r\n    name: 'WebPageController',\r\n    displayName: 'WebPages API',\r\n    description: 'API Controller for WebPages',\r\n    service: WebPageController\r\n}, {\r\n    name: 'WebComponentController',\r\n    displayName: 'WebComponents API',\r\n    description: 'API Controller for WebComponents',\r\n    service: WebComponentController\r\n}, {\r\n    name: 'SettingsController',\r\n    displayName: 'SystemSettings API',\r\n    description: 'API Controller for SystemSettings',\r\n    service: SettingsController\r\n}, {\r\n    name: 'AppController',\r\n    displayName: 'Application API',\r\n    description: 'API Controller for Application',\r\n    service: AppController\r\n}];"],"names":["os.networkInterfaces","os.cpus","os.freemem","os.totalmem","os.hostname"],"mappings":"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"}